{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/dual-listbox.js"],"names":["root","factory","exports","module","define","amd","a","i","global","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SELECTED_MODIFIER","DualListbox","selector","options","this","setDefaults","selected","available","isDomElement","select","document","querySelector","_initOptions","_initReusableElements","_splitOptions","undefined","_buildDualListbox","parentNode","_addActions","redraw","HTMLElement","nodeType","nodeName","addEvent","removeEvent","availableTitle","selectedTitle","showAddButton","addButtonText","showRemoveButton","removeButtonText","showAddAllButton","addAllButtonText","showRemoveAllButton","removeAllButtonText","searchPlaceholder","eventName","callback","dualListbox","addEventListener","listItem","index","indexOf","splice","push","_selectOption","dataset","id","setTimeout","event","createEvent","initEvent","addedElement","dispatchEvent","updateAvailableListbox","updateSelectedListbox","_deselectOption","removedElement","searchString","items","querySelectorAll","lowerCaseSearchString","toLowerCase","length","item","textContent","style","display","_updateListbox","availableList","selectedList","preventDefault","filter","forEach","addSelected","list","elements","firstChild","removeChild","appendChild","removeSelected","stopPropagation","classList","remove","contains","add","_addButtonActions","_addSearchActions","add_all_button","_actionAllSelected","add_button","_actionItemSelected","remove_button","_actionItemDeselected","remove_all_button","_actionAllDeselected","_actionItemDoubleClick","_actionItemClick","search","searchLists","target","container","dualListBoxContainer","_createList","availableListTitle","buttons","selectedListTitle","insertBefore","header","result","createElement","innerHTML","option","text","_addClickActions","placeholder","removeAttribute","innerText","_createButtons","_createSearch","setAttribute","_addOption","attributes","_createListItem"],"mappings":"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","file":"dual-listbox.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const MAIN_BLOCK = 'dual-listbox';\n\nconst CONTAINER_ELEMENT = 'dual-listbox__container';\nconst AVAILABLE_ELEMENT = 'dual-listbox__available';\nconst SELECTED_ELEMENT = 'dual-listbox__selected';\nconst TITLE_ELEMENT = 'dual-listbox__title';\nconst ITEM_ELEMENT = 'dual-listbox__item';\nconst BUTTONS_ELEMENT = 'dual-listbox__buttons';\nconst BUTTON_ELEMENT = 'dual-listbox__button';\nconst SEARCH_ELEMENT = 'dual-listbox__search';\n\nconst SELECTED_MODIFIER = 'dual-listbox__item--selected';\n\n\n/**\n * Dual select interface allowing the user to select items from a list of provided options.\n * @class\n */\nclass DualListbox {\n    constructor(selector, options = {}) {\n        this.setDefaults();\n        this.selected = [];\n        this.available = [];\n\n        if (DualListbox.isDomElement(selector)) {\n            this.select = selector;\n        } else {\n            this.select = document.querySelector(selector);\n        }\n\n        this._initOptions(options);\n        this._initReusableElements();\n        this._splitOptions(this.select.options);\n        if (options.options !== undefined) {\n            this._splitOptions(options.options);\n        }\n        this._buildDualListbox(this.select.parentNode);\n        this._addActions();\n\n        this.redraw();\n    }\n\n    /**\n     * Sets the default values that can be overwritten.\n     */\n    setDefaults() {\n        this.addEvent = null; // TODO: Remove in favor of eventListener\n        this.removeEvent = null; // TODO: Remove in favor of eventListener\n        this.availableTitle = 'Available options';\n        this.selectedTitle = 'Selected options';\n\n        this.showAddButton = true;\n        this.addButtonText = 'add';\n\n        this.showRemoveButton = true;\n        this.removeButtonText = 'remove';\n\n        this.showAddAllButton = true;\n        this.addAllButtonText = 'add all';\n\n        this.showRemoveAllButton = true;\n        this.removeAllButtonText = 'remove all';\n\n        this.searchPlaceholder = 'Search';\n    }\n\n    /**\n     * Add eventListener to the dualListbox element.\n     *\n     * @param {String} eventName\n     * @param {function} callback\n     */\n    addEventListener(eventName, callback) {\n        this.dualListbox.addEventListener(eventName, callback);\n    }\n\n    /**\n     * Add the listItem to the selected list.\n     *\n     * @param {NodeElement} listItem\n     */\n    addSelected(listItem) {\n        let index = this.available.indexOf(listItem);\n        if (index > -1) {\n            this.available.splice(index, 1);\n            this.selected.push(listItem);\n            this._selectOption(listItem.dataset.id);\n            this.redraw();\n\n            setTimeout(() => {\n                let event = document.createEvent(\"HTMLEvents\");\n                event.initEvent(\"added\", false, true);\n                event.addedElement = listItem;\n                this.dualListbox.dispatchEvent(event);\n            }, 0);\n        }\n    }\n\n    /**\n     * Redraws the Dual listbox content\n     */\n    redraw() {\n        this.updateAvailableListbox();\n        this.updateSelectedListbox();\n    }\n\n    /**\n     * Removes the listItem from the selected list.\n     *\n     * @param {NodeElement} listItem\n     */\n    removeSelected(listItem) {\n        let index = this.selected.indexOf(listItem);\n        if (index > -1) {\n            this.selected.splice(index, 1);\n            this.available.push(listItem);\n            this._deselectOption(listItem.dataset.id);\n            this.redraw();\n\n            setTimeout(() => {\n                let event = document.createEvent(\"HTMLEvents\");\n                event.initEvent(\"removed\", false, true);\n                event.removedElement = listItem;\n                this.dualListbox.dispatchEvent(event);\n            }, 0);\n        }\n    }\n\n    /**\n     * Filters the listboxes with the given searchString.\n     *\n     * @param {Object} searchString\n     * @param dualListbox\n     */\n    searchLists(searchString, dualListbox) {\n        let items = dualListbox.querySelectorAll(`.${ITEM_ELEMENT}`);\n        let lowerCaseSearchString = searchString.toLowerCase();\n\n        for (let i = 0; i < items.length; i++) {\n            let item = items[i];\n            if (item.textContent.toLowerCase().indexOf(lowerCaseSearchString) === -1) {\n                item.style.display = 'none';\n            } else {\n                item.style.display = 'list-item';\n            }\n        }\n    }\n\n    /**\n     * Update the elements in the available listbox;\n     */\n    updateAvailableListbox() {\n        this._updateListbox(this.availableList, this.available);\n    }\n\n    /**\n     * Update the elements in the selected listbox;\n     */\n    updateSelectedListbox() {\n        this._updateListbox(this.selectedList, this.selected);\n    }\n\n    //\n    //\n    // PRIVATE FUNCTIONS\n    //\n    //\n\n    /**\n     * Action to set all listItems to selected.\n     */\n    _actionAllSelected(event) {\n        event.preventDefault();\n\n        let selected = this.available.filter((item) => item.style.display !== \"none\");\n        selected.forEach((item) => this.addSelected(item));\n    }\n\n    /**\n     * Update the elements in the listbox;\n     */\n    _updateListbox(list, elements) {\n        while (list.firstChild) {\n            list.removeChild(list.firstChild);\n        }\n\n        for (let i = 0; i < elements.length; i++) {\n            let listItem = elements[i];\n            list.appendChild(listItem);\n        }\n    }\n\n    /**\n     * Action to set one listItem to selected.\n     */\n    _actionItemSelected(event) {\n        event.preventDefault();\n\n        let selected = this.dualListbox.querySelector(`.${SELECTED_MODIFIER}`);\n        if (selected) {\n            this.addSelected(selected);\n        }\n    }\n\n    /**\n     * Action to set all listItems to available.\n     */\n    _actionAllDeselected(event) {\n        event.preventDefault();\n\n        let deselected = this.selected.filter((item) => item.style.display !== \"none\");\n        deselected.forEach((item) => this.removeSelected(item));\n    }\n\n    /**\n     * Action to set one listItem to available.\n     */\n    _actionItemDeselected(event) {\n        event.preventDefault();\n\n        let selected = this.dualListbox.querySelector(`.${SELECTED_MODIFIER}`);\n        if (selected) {\n            this.removeSelected(selected);\n        }\n    }\n\n    /**\n     * Action when double clicked on a listItem.\n     */\n    _actionItemDoubleClick(listItem, event = null) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (this.selected.indexOf(listItem) > -1) {\n            this.removeSelected(listItem);\n        } else {\n            this.addSelected(listItem);\n        }\n    }\n\n    /**\n     * Action when single clicked on a listItem.\n     */\n    _actionItemClick(listItem, dualListbox, event = null) {\n        if (event) {\n            event.preventDefault();\n        }\n\n        let items = dualListbox.querySelectorAll(`.${ITEM_ELEMENT}`);\n\n        for (let i = 0; i < items.length; i++) {\n            let value = items[i];\n            if (value !== listItem) {\n                value.classList.remove(SELECTED_MODIFIER);\n            }\n        }\n\n        if (listItem.classList.contains(SELECTED_MODIFIER)) {\n            listItem.classList.remove(SELECTED_MODIFIER);\n        } else {\n            listItem.classList.add(SELECTED_MODIFIER);\n        }\n    }\n\n    /**\n     * @Private\n     * Adds the needed actions to the elements.\n     */\n    _addActions() {\n        this._addButtonActions();\n        this._addSearchActions();\n    }\n\n    /**\n     * Adds the actions to the buttons that are created.\n     */\n    _addButtonActions() {\n        this.add_all_button.addEventListener('click', (event) => this._actionAllSelected(event));\n        this.add_button.addEventListener('click', (event) => this._actionItemSelected(event));\n        this.remove_button.addEventListener('click', (event) => this._actionItemDeselected(event));\n        this.remove_all_button.addEventListener('click', (event) => this._actionAllDeselected(event));\n    }\n\n    /**\n     * Adds the click items to the listItem.\n     *\n     * @param {Object} listItem\n     */\n    _addClickActions(listItem) {\n        listItem.addEventListener('dblclick', (event) => this._actionItemDoubleClick(listItem, event));\n        listItem.addEventListener('click', (event) => this._actionItemClick(listItem, this.dualListbox, event));\n        return listItem;\n    }\n\n    /**\n     * @Private\n     * Adds the actions to the search input.\n     */\n    _addSearchActions() {\n        this.search.addEventListener('change', (event) => this.searchLists(event.target.value, this.dualListbox));\n        this.search.addEventListener('keyup', (event) => this.searchLists(event.target.value, this.dualListbox));\n    }\n\n    /**\n     * @Private\n     * Builds the Dual listbox and makes it visible to the user.\n     */\n    _buildDualListbox(container) {\n        this.select.style.display = 'none';\n\n        this.dualListBoxContainer.appendChild(this._createList(this.availableListTitle, this.availableList));\n        this.dualListBoxContainer.appendChild(this.buttons);\n        this.dualListBoxContainer.appendChild(this._createList(this.selectedListTitle, this.selectedList));\n\n        this.dualListbox.appendChild(this.search);\n        this.dualListbox.appendChild(this.dualListBoxContainer);\n\n        container.insertBefore(this.dualListbox, this.select);\n    }\n\n    /**\n     * Creates list with the header.\n     */\n    _createList(header, list) {\n        let result = document.createElement('div');\n        result.appendChild(header);\n        result.appendChild(list);\n        return result;\n    }\n\n    /**\n     * Creates the buttons to add/remove the selected item.\n     */\n    _createButtons() {\n        this.buttons = document.createElement('div');\n        this.buttons.classList.add(BUTTONS_ELEMENT);\n\n        this.add_all_button = document.createElement('button');\n        this.add_all_button.classList.add(BUTTON_ELEMENT);\n        this.add_all_button.innerHTML = this.addAllButtonText;\n\n        this.add_button = document.createElement('button');\n        this.add_button.classList.add(BUTTON_ELEMENT);\n        this.add_button.innerHTML = this.addButtonText;\n\n        this.remove_button = document.createElement('button');\n        this.remove_button.classList.add(BUTTON_ELEMENT);\n        this.remove_button.innerHTML = this.removeButtonText;\n\n        this.remove_all_button = document.createElement('button');\n        this.remove_all_button.classList.add(BUTTON_ELEMENT);\n        this.remove_all_button.innerHTML = this.removeAllButtonText;\n\n        if(this.showAddAllButton) {\n            this.buttons.appendChild(this.add_all_button);\n        }\n        if(this.showAddButton) {\n            this.buttons.appendChild(this.add_button);\n        }\n        if(this.showRemoveButton) {\n            this.buttons.appendChild(this.remove_button);\n        }\n        if(this.showRemoveAllButton) {\n            this.buttons.appendChild(this.remove_all_button);\n        }\n    }\n\n    /**\n     * @Private\n     * Creates the listItem out of the option.\n     */\n    _createListItem(option) {\n        let listItem = document.createElement('li');\n\n        listItem.classList.add(ITEM_ELEMENT);\n        listItem.innerHTML = option.text;\n        listItem.dataset.id = option.value;\n\n        this._addClickActions(listItem);\n\n        return listItem;\n    }\n\n    /**\n     * @Private\n     * Creates the search input.\n     */\n    _createSearch() {\n        this.search = document.createElement('input');\n        this.search.classList.add(SEARCH_ELEMENT);\n        this.search.placeholder = this.searchPlaceholder;\n    }\n\n    /**\n     * @Private\n     * Deselects the option with the matching value\n     *\n     * @param {Object} value\n     */\n    _deselectOption(value) {\n        let options = this.select.options;\n\n        for (let i = 0; i < options.length; i++) {\n            let option = options[i];\n            if (option.value === value) {\n                option.selected = false;\n                option.removeAttribute('selected');\n            }\n        }\n\n        if (this.removeEvent) {\n            this.removeEvent(value);\n        }\n    }\n\n    /**\n     * @Private\n     * Set the option variables to this.\n     */\n    _initOptions(options) {\n        for (let key in options) {\n            if (options.hasOwnProperty(key)) {\n                this[key] = options[key];\n            }\n        }\n    }\n\n    /**\n     * @Private\n     * Creates all the static elements for the Dual listbox.\n     */\n    _initReusableElements() {\n        this.dualListbox = document.createElement('div');\n        this.dualListbox.classList.add(MAIN_BLOCK);\n        if (this.select.id) {\n            this.dualListbox.classList.add(this.select.id);\n        }\n\n        this.dualListBoxContainer = document.createElement('div');\n        this.dualListBoxContainer.classList.add(CONTAINER_ELEMENT);\n\n        this.availableList = document.createElement('ul');\n        this.availableList.classList.add(AVAILABLE_ELEMENT);\n\n        this.selectedList = document.createElement('ul');\n        this.selectedList.classList.add(SELECTED_ELEMENT);\n\n        this.availableListTitle = document.createElement('div');\n        this.availableListTitle.classList.add(TITLE_ELEMENT);\n        this.availableListTitle.innerText = this.availableTitle;\n\n        this.selectedListTitle = document.createElement('div');\n        this.selectedListTitle.classList.add(TITLE_ELEMENT);\n        this.selectedListTitle.innerText = this.selectedTitle;\n\n        this._createButtons();\n        this._createSearch();\n    }\n\n    /**\n     * @Private\n     * Selects the option with the matching value\n     *\n     * @param {Object} value\n     */\n    _selectOption(value) {\n        let options = this.select.options;\n\n        for (let i = 0; i < options.length; i++) {\n            let option = options[i];\n            if (option.value === value) {\n                option.selected = true;\n                option.setAttribute('selected', '');\n            }\n        }\n\n        if (this.addEvent) {\n            this.addEvent(value);\n        }\n    }\n\n    /**\n     * @Private\n     * Splits the options and places them in the correct list.\n     */\n    _splitOptions(options) {\n        for (let i = 0; i < options.length; i++) {\n            let option = options[i];\n            if (DualListbox.isDomElement(option)) {\n                this._addOption({\n                    text: option.innerHTML,\n                    value: option.value,\n                    selected: option.attributes.selected\n                });\n            } else {\n                this._addOption(option);\n            }\n        }\n    }\n\n    /**\n     * @Private\n     * Adds option to the selected of available list (depending on the data).\n     */\n    _addOption(option) {\n        let listItem = this._createListItem(option);\n\n        if (option.selected) {\n            this.selected.push(listItem);\n        } else {\n            this.available.push(listItem);\n        }\n    }\n\n    /**\n     * @Private\n     * Returns true if argument is a DOM element\n     */\n    static isDomElement(o) {\n        return (\n            typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\"\n        );\n    }\n}\n\nexport default DualListbox;\nexport {DualListbox};\n"],"sourceRoot":""}